# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# API Activation
apiVersion: serviceusage.cnrm.cloud.google.com/v1beta1
kind: Service
metadata: # kpt-merge: projects/my-project-id-bigquery
  name: my-project-id-bigquery # kpt-set: ${project-id}-bigquery
  namespace: projects
  annotations:
    cnrm.cloud.google.com/blueprint: cnrm/landing-zone:log-export/v0.4.0
    cnrm.cloud.google.com/deletion-policy: "abandon"
    cnrm.cloud.google.com/disable-dependent-services: "false"
    cnrm.cloud.google.com/project-id: my-project-id # kpt-set: ${project-id}
spec:
  resourceID: bigquery.googleapis.com
---
# Org Sink to BQ
apiVersion: logging.cnrm.cloud.google.com/v1beta1
kind: LoggingLogSink
metadata: # kpt-merge: logging/123456789012-bqsink
  name: 123456789012-bqsink # kpt-set: ${org-id}-bqsink
  namespace: "${project_id}" # kpt-set: ${project-id}
  annotations:
    cnrm.cloud.google.com/blueprint: cnrm/landing-zone:log-export/v0.4.0
spec:
  destination:
    bigQueryDatasetRef:
      name: bqlogexportdataset
  filter: "" # kpt-set: ${filter}
  includeChildren: true
  projectRef:
      name: project-id # kpt-set: ${project-id}
  uniqueWriterIdentity: true
---
# BQ Dataset
apiVersion: bigquery.cnrm.cloud.google.com/v1beta1
kind: BigQueryDataset
metadata: # kpt-merge: logging/bqlogexportdataset
  name: bqlogexportdataset
  namespace: project_id # kpt-set: ${project-id}
  annotations:
    cnrm.cloud.google.com/delete-contents-on-destroy: "false" # kpt-set: ${delete-contents-on-destroy}
    cnrm.cloud.google.com/project-id: my-project-id # kpt-set: ${project-id}
    cnrm.cloud.google.com/blueprint: cnrm/landing-zone:log-export/v0.4.0
spec:
  defaultTableExpirationMs: 3600000 # kpt-set: ${default-table-expiration-ms}
  description: "BigQuery audit logs for project" # kpt-set: ${dataset-description}
  friendlyName: audit-logs # kpt-set: ${dataset-name}
  location: US # kpt-set: ${dataset-location}
  access:
  - groupByEmail: 
  - role: 
  defaultEncryptionConfiguration:
    kmsKeyRef:
      name: bq-ds-key
      namespace: project-id # kpt-set: ${project-id}